{"version":3,"file":"static/js/4.febb1571.chunk.js","mappings":"mSACA,EAAmC,2CAAnC,EAAqF,+BAArF,EAA6H,iC,SC8F7H,EAxFyB,WACvB,IAAMA,GAAkBC,EAAAA,EAAAA,cAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,GAAf,IACnCC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,GAAI,GACJC,MAAO,KALT,eAAOC,EAAP,KAAiBC,EAAjB,KAOA,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UACrB,GAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eAEMC,EAAgB,SAAAC,GACpB,IAAMC,EAAYD,EAAME,cAAcC,OAAS,GACzCC,EAAWJ,EAAME,cAAcf,MAAQ,GAC7CM,GAAY,SAAAY,GAAI,yBAAUA,GAAV,cAAiBD,EAAWH,GAA5B,GACjB,GAEDK,EAAAA,EAAAA,YAAU,WACRC,GACD,IAED,IAAMA,EAAa,WACb5B,GACFK,EAAS,0BAEZ,EAEKwB,EAAU,mCAAG,WAAMC,GAAN,8EACjBA,EAAEC,iBADe,kBAGQf,EAAWH,GAAUmB,SAH7B,cAGTC,EAHS,gBAITd,GAAQ,kBAAIc,GAAL,IAAeC,UAAU,KAAOF,SAJ9B,0DAMfG,QAAQC,IAAR,OACI,KAAIC,KAAKC,QAPE,qBAQT,KAAID,KAAKC,QAAQC,SAAS,UARjB,0CASJC,MAAM,sMATF,QAWbA,MAAM,KAAIH,KAAKC,SAXF,wBAabE,MAAM,sJAbO,QAgBjBZ,IAhBiB,yDAAH,sDAmBhB,OACE,8BACGX,GACC,iFAEA,kBAAMwB,UAAWC,EAAyBC,SAAUd,EAApD,WACE,gGACA,kBACEe,YAAY,qBACZC,SAAUzB,EACVI,MAAOX,EAASL,MAAQ,GACxBA,KAAK,OACLsC,UAAQ,KAEV,kBACEF,YAAY,iCACZC,SAAUzB,EACVI,MAAOX,EAASJ,OAAS,GACzBD,KAAK,QACLsC,UAAQ,KAEV,kBACEF,YAAY,yGACZC,SAAUzB,EACVI,MAAOX,EAASH,UAAY,GAC5BF,KAAK,WACLsC,UAAQ,KAEV,mBAAQL,UAAWC,EAAeK,KAAK,SAAvC,2HAGA,SAAC,KAAD,CAASN,UAAWC,EAAaM,GAAI,0BAArC,yGAOT,C,uBC7FD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQlD,EAAKmD,GACpE,IACE,IAAIC,EAAON,EAAI9C,GAAKmD,GAChB/B,EAAQgC,EAAKhC,KAInB,CAHE,MAAOiC,GAEP,YADAL,EAAOK,EAET,CAEID,EAAKE,KACPP,EAAQ3B,GAERmC,QAAQR,QAAQ3B,GAAOoC,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAM7B,GACbyB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ9B,EAClE,CAEA,SAAS8B,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://react-porject-caht/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"RegistrationForm\":\"RegistrationForm_RegistrationForm__Q-56t\",\"link\":\"RegistrationForm_link__JBdfz\",\"submit\":\"RegistrationForm_submit__dPXqA\"};","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useUserSignupMutation } from 'redux/userHerokuappApi';\nimport { useAddUserMutation } from 'redux/usersApiMockapi';\nimport styles from './RegistrationForm.module.css';\n\nconst RegistrationForm = () => {\n  const isUserRegistred = useSelector(state => state.user.key);\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    id: '',\n    token: '',\n  });\n  const [userSignup, { isLoading }] = useUserSignupMutation();\n  const [addUser] = useAddUserMutation();\n\n  const onUpdateState = event => {\n    const dataValue = event.currentTarget.value || '';\n    const dataName = event.currentTarget.name || '';\n    setUserData(prev => ({ ...prev, [dataName]: dataValue }));\n  };\n\n  useEffect(() => {\n    navigation();\n  });\n\n  const navigation = () => {\n    if (isUserRegistred) {\n      navigate('/react-porject/MainForm');\n    }\n  };\n\n  const addNewUser = async e => {\n    e.preventDefault();\n    try {\n      const response = await userSignup(userData).unwrap();\n      await addUser({...response, isOnline: true}).unwrap();\n    } catch (err) {\n      console.log(err);\n      if (err.data.message) {\n        if (err.data.message.includes('length')) {\n          return alert('Пароль должен быть не менее 7 символов');\n        }\n        alert(err.data.message);\n      } else {\n        alert('Такой Email уже зарегистрирован');\n      }\n    }\n    navigation();\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <h1>Загрузка...</h1>\n      ) : (\n        <form className={styles.RegistrationForm} onSubmit={addNewUser}>\n          <h2>Регистрация</h2>\n          <input\n            placeholder=\"ник\"\n            onChange={onUpdateState}\n            value={userData.name || ''}\n            name=\"name\"\n            required\n          />\n          <input\n            placeholder=\"почта\"\n            onChange={onUpdateState}\n            value={userData.email || ''}\n            name=\"email\"\n            required\n          />\n          <input\n            placeholder=\"пароль (от 7 символов)\"\n            onChange={onUpdateState}\n            value={userData.password || ''}\n            name=\"password\"\n            required\n          />\n          <button className={styles.submit} type=\"submit\">\n            Зарегистрироваться\n          </button>\n          <NavLink className={styles.link} to={'/react-porjec/LoginForm'}>\n            Уже есть аккаунт?\n          </NavLink>\n        </form>\n      )}\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["isUserRegistred","useSelector","state","user","key","navigate","useNavigate","useState","name","email","password","id","token","userData","setUserData","useUserSignupMutation","userSignup","isLoading","useAddUserMutation","addUser","onUpdateState","event","dataValue","currentTarget","value","dataName","prev","useEffect","navigation","addNewUser","e","preventDefault","unwrap","response","isOnline","console","log","data","message","includes","alert","className","styles","onSubmit","placeholder","onChange","required","type","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
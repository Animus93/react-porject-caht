{"version":3,"file":"static/js/362.1de543c3.chunk.js","mappings":"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","sources":["webpack://react-porject-caht/./src/components/MainForm/LeftBlok/LeftBlok.module.css?77e6","components/MainForm/LeftBlok/LeftBlok.jsx","webpack://react-porject-caht/./src/components/MainForm/MainForm.module.css?5ffe","components/MainForm/MainForm.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"LeftBlok_content__QNNSR\",\"each\":\"LeftBlok_each__XyTeO\",\"indicator\":\"LeftBlok_indicator__K5V5j\",\"online\":\"LeftBlok_online__SAlSN LeftBlok_indicator__K5V5j\",\"offline\":\"LeftBlok_offline__lelKe LeftBlok_indicator__K5V5j\"};","import { useGetUsersQuery } from 'redux/usersApiMockapi';\nimport styles from './LeftBlok.module.css';\n\nconst LeftBlok = () => {\n  const { data: users } = useGetUsersQuery();\n\n\n  return (\n    <>\n    {users && users.map(users => {\n      return (<div key={users.user.email} className={styles.content}>\n        <div className={styles.each}>\n      <span className={users.isOnline ? styles.offline : styles.online}>\n        {' '}\n      </span>\n      <b>{users.user.name}</b>\n        </div>\n      </div>)\n    })}\n    </>\n  );\n};\nexport default LeftBlok;\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MainForm_content__f9e54\",\"leftBlok\":\"MainForm_leftBlok__IoVdE\",\"cont2\":\"MainForm_cont2__d+61u\",\"rightBlok\":\"MainForm_rightBlok__aqzqY\",\"caht\":\"MainForm_caht__dkCmm\",\"cahtMessage\":\"MainForm_cahtMessage__K06jE\",\"createdAt\":\"MainForm_createdAt__39lFz\",\"myMessage\":\"MainForm_myMessage__asrmx MainForm_cahtMessage__K06jE\",\"name\":\"MainForm_name__+ZKQz\",\"text\":\"MainForm_text__1SW63\",\"user\":\"MainForm_user__jd2wi\",\"inp\":\"MainForm_inp__BtdlU\"};","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  useAddMessageMutation,\n  useGetMessagesQuery,\n  useUpdateMessagesMutation,\n} from 'redux/chatApiMockapi';\nimport {\n  useUpdateUsersMutation,\n  useUserOfflineMutation,\n} from 'redux/usersApiMockapi';\nimport LeftBlok from './LeftBlok/LeftBlok';\nimport styles from './MainForm.module.css';\n\nconst MainForm = () => {\n  const [offline] = useUserOfflineMutation();\n  const current = useSelector(state => state.user);\n  const { data, isLoading } = useGetMessagesQuery();\n  const [dataUpd] = useUpdateMessagesMutation();\n  const [usersUpd] = useUpdateUsersMutation();\n  const [newMessage] = useAddMessageMutation();\n  window.onunload(offline(current.id))\n  useEffect(() => {\n    const list = document.querySelector('#messages');\n    if (list.children[0].lastElementChild) {\n      return list.children[0].lastElementChild.scrollIntoView();\n    }\n    return;\n  }, [data]);\n\n  const sendMessage = async e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      const messageText = e.currentTarget.textContent;\n      e.currentTarget.textContent = '';\n      const postDate = `${new Date()\n        .toLocaleDateString()\n        .slice(0, -5)} ${new Date().toLocaleTimeString().slice(0, -3)}`;\n      const createNewMessage = {\n        createdAt: postDate,\n        name: current.user.name,\n        text: messageText,\n      };\n      await newMessage(createNewMessage);\n    }\n  };\n\n  const update = () => {\n    dataUpd();\n    usersUpd();\n  };\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.user}>\n        <b>{current.user.name}</b>\n        <button onClick={() => offline(current.id)}>Logout</button>\n      </div>\n      {window.screen.width > 1000 && (\n        <div className={styles.leftBlok}>\n          <p>\n            <b>Friends Online</b>\n          </p>\n          <LeftBlok />\n        </div>\n      )}\n      <div id=\"messages\" className={styles.rightBlok}>\n        {isLoading ? (\n          <p>Load chat messages</p>\n        ) : (\n          <div className={styles.caht}>\n            {data.map(message => {\n              return (\n                <div\n                  id=\"caht\"\n                  key={message.id}\n                  className={\n                    message.name === current.user.name\n                      ? styles.myMessage\n                      : styles.cahtMessage\n                  }\n                >\n                  <p className={styles.name}>{message.name}</p>\n                  <p className={styles.text}>{message.text}</p>\n                  <p className={styles.createdAt}>{message.createdAt}</p>\n                </div>\n              );\n            })}\n          </div>\n        )}\n        <div\n          className={styles.inp}\n          data-placeholder=\"Message\"\n          contentEditable=\"true\"\n          onKeyDown={sendMessage}\n        ></div>\n        <button onClick={update}>Обновить</button>\n      </div>\n    </div>\n  );\n};\nexport default MainForm;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["users","useGetUsersQuery","data","map","className","styles","isOnline","user","name","email","useUserOfflineMutation","offline","current","useSelector","state","useGetMessagesQuery","isLoading","useUpdateMessagesMutation","dataUpd","useUpdateUsersMutation","usersUpd","useAddMessageMutation","newMessage","window","onunload","id","useEffect","list","document","querySelector","children","lastElementChild","scrollIntoView","sendMessage","e","key","preventDefault","messageText","currentTarget","textContent","postDate","Date","toLocaleDateString","slice","toLocaleTimeString","createNewMessage","createdAt","text","onClick","screen","width","message","contentEditable","onKeyDown","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}